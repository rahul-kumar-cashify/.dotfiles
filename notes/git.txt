GIT 

CLONE
_______________________________________________________________________________
git clone <url> 
git clone <url> <new-name>

eg:-
git clone https://github.com/libgit2/libgit2 mylibgit

Git status 
?? untracked files
M  modified files
A  new files added in staging area

.gitignore file 
    # ignore all .a files
    *.a
    # but do track lib.a, even though you're ignoring .a files above
    !lib.a
    # only ignore the TODO file in the current directory, not subdir/TODO
    /TODO
    # ignore all files in any directory named build
    build/
    # ignore doc/notes.txt, but not doc/server/arch.txt
    doc/*.txt
    # ignore all .pdf files in the doc/ directory and any of its subdirectories
    doc/**/*.pdf

_______________________________________________________________________________
ADD

git add 
    --patch
        Interactively choose hunks of patch
    --update
        update tracked files 


_______________________________________________________________________________
DIFF

git diff 
    show diff modified files
git diff --staged
    show diff staged from last commited
NOTES: git diff --cached to see what youâ€™ve staged so far (--staged and --cached are synonyms)

git diff <-oldHash-> .. <-newHash->
    show diff between two hash

git diff --no-index <file-one> <file-two>
    show diff between two files


_______________________________________________________________________________
UNSTAGE
git restore
    restore to last commit state

git restore --staged <path-file/dir>
    unstage files

git clean
    undo all local changes

_______________________________________________________________________________
LOG

git log
    
    --patch 
        shows diff like patch with logs
    --oneline 
        shows commit message in one line

    --before="2020-09-29"
    --after="2020-09-29"
    --after="yesterday"
    --after="one week ago"
    --after="one month ago"


    <-oldHash-> .. <-newHash->
        range log

    -- <filename>
    NOTE: should be used in the end 


    --pretty=format:""


    NOTE: to show all comit if HEAD is detached
    git log --oneline --all
        81a58dd (refs/stash) WIP on main: 1ebc80d Revert "2"
        5de1552 index on main: 1ebc80d Revert "2"
        1ebc80d (main) Revert "2"
        98de08b added another file 1
        94478ee (HEAD) 2
        327e112 1
        e6de799 new repo new file



_______________________________________________________________________________
BISECT

url: 
    https://youtu.be/z-AkSXDqodc?si=sLx0elyCX08g7KGm



_______________________________________________________________________________
BLAME

git blame <file-name>

    -L <line_No>,<line_No>
        eg git blame -L 11,22 main.js

    

_______________________________________________________________________________
BLAME

git tag 

git tag hashcode
git tag hashcode -m "message"


_______________________________________________________________________________
TAG
lightweight tag
annotated tag
git tag -l <wildcard>


git push origin v1.0
git push origin --tags

git tag -d <tag-name>
git tag -delete <tag-name>

git push origin --delete v1.0



_______________________________________________________________________________
BRANCH


branch
    list all branch

branch -m <oldname> <newname>
    change name of branch

switch <branch-name>
    switch to another branch

_______________________________________________________________________________
STASH

    stash push -m"message"
    stash apply <index>
    stash list
    stash drop <index>
    stash clear


_______________________________________________________________________________
MERGE

fast forward
3 way merge



in main branch

git merge <branchname>

git merge --no-ff <branchname>

                              
--no-ff           --ff (default)
                           
* Merge 1           * Head 
| \                 |
|  @                @
|  |                |
|  @                @ 
|  |                | 
|  @ feature        @ feature 
| /                / 
*                  *
|                  |
*                  *
|                  |
* main             * main

git config ff no
git config --global ff no


git branch --merged
git branch --no-merged

git merge --abort




_______________________________________________________________________________
RESET 

--soft: stage everything
    reset head but keep changes staged
--mixed: unstage everything
    reset head and keep changes in working dir unstaged
--hard: ignore everything
    reset head and do not keep changes













git revert meger ???




_______________________________________________________________________________
REBASE

https://www.youtube.com/watch?v=qsTthZi23VE&t=1840s




_______________________________________________________________________________
CHERRY-PICK

git cherry-pick <hash>
    it add commit to branch from another branch




_______________________________________________________________________________
REFLOG
    git reflog
        git commit history, can be used for recovery


_______________________________________________________________________________
SUBMODULES
git submodules add <url>

git add .
git commit 

[url]: https://www.youtube.com/watch?v=gSlXo2iLBro&t=12s





_______________________________________________________________________________


$ git branch -a
  bugfix
* main
  remotes/origin/main

$ git remote
origin

$ vi

$ git remote -v
origin  git@github.com:xyz-rahul/git-practice.git (fetch)
origin  git@github.com:xyz-rahul/git-practice.git (push)

_______________________________________________________________________________


Git history - Amend, Reword, Delete, Reorder, Squash and Split
url: https://www.youtube.com/watch?v=ElRzTuYln0M&t=425s



_______________________________________________________________________________
.gitconfig

system /usr/local/git/etc/gitconfig
global $home/.gitconfig
local .git/config

 --------------------------------------------
|  system /usr/local/git/etc/gitconfig       |
|   --------------------------------------   |
|   |  global $home/.gitconfig           |   |
|   | ---------------------------------- |   |
|   | |                                | |   | 
|   | |  local .git/config             | |   |
|   | |                                | |   |
|   | ---------------------------------- |   |
|   --------------------------------------   |
 ---------------------------------------------

git config --list
git config --list --local


git config --local edit
    open .git/config to edit
git config --global edit
    open global $home/.gitconfig

